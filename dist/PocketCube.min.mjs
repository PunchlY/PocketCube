var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{F1:()=>h,SV:()=>a,md:()=>f});const n=(...t)=>t.map((t=>[].concat(t))),o=new WeakMap;function s(t,e){(t=~~t)||o.set(e,[[0,1,2,3,4,5,6,7],[0,0,0,0,0,0,0,0]]);const n=[],s=[];n.push((3-Array.from({length:7}).reduce(((e,o=t%3)=>(n.push(o),t=~~(t/3),e+o)),0)%3)%3),Array.from({length:8}).forEach((function(e,n){s.push(this.splice(t%(8-n),1)[0]),t=~~(t/(8-n))}),Array.from({length:8}).map(((t,e)=>e))),e&&o.set(e,[s,n])}function i(t,e=f){const n=new e,[s,i]=o.get(t);return o.set(n,[[].concat(s),[].concat(i)]),n}const r=(t,...e)=>{const[s,i]=o.get(t);for(const t of e){const[e,r]=n(s,i),[c,a]=o.get(t);c.forEach(((t,n)=>{s[n]=e[t],i[n]=(r[t]+a[n])%3}))}return t};class c{constructor(t=0){s(t,this)}at(t){const[e,n]=o.get(this);return 3*e.at(t)+n.at(t)}find(t){const[e,n]=o.get(this),s=e.indexOf(~~(t/3)%8);return 3*s+(3+t%3-n[s])%3}*[Symbol.iterator](){const[t,e]=o.get(this);for(let n=0;n<8;n++)yield 3*t[n]+e[n]}}Object.defineProperties(c.prototype,Object.assign({position:{get(){return function([t,e]){const n=[8];return e.slice(0,-1).reduceRight(((t,e)=>3*t+e),t.reduceRight(((t,e,o)=>{const s=n.findIndex((t=>e<t));return n.splice(s,0,e),t*(8-o)+s}),0))}(o.get(this))},set(t){s(t,this)}},length:{value:8},[Symbol.isConcatSpreadable]:{value:!0}},Array.from({length:8}).map(((t,e)=>({get(){const[t,n]=o.get(this);return 3*t[e]+n[e]}})))));class a extends c{constructor(t){super(t),Object.defineProperty(this,"position",{get:()=>t})}copy(){return i(this)}action(...t){return i(this).action(...t)}inverse(){return i(this).inverse()}image(){return i(this).image()}}!function(t){const{freeze:e}=Object,n=n=>e(new t(n));t.C=e([0,16219978,2469029,33104619,17954269,49605440,51565086,34630144,3470675,84669705,36364435,50607086,18222084,52672894,36822425,51396687,70206073,38451740,40288914,53569564,84835823,73463517,71102743,86465138].map(n)),t._C=e(Array.from({length:8}).map(((e,n)=>t.C.slice().sort(((t,e)=>t[n]-e[n])))).map(e)),t.X=e([t.C[14],t.C[18],t.C[8]]),t.Y=e([t.C[6],t.C[9],t.C[3]]),t.Z=[t.C[4],t.C[15],t.C[13]],t.R=e([77350359,68566824,50861415].map(n)),t.U=e([51438240,84505680,33067440].map(n)),t.F=e([21433374,84383208,62951382].map(n)),t.L=e([15944780,20238498,22807586].map(n)),t.D=e([37179,164025,126846].map(n)),t.B=e([4540624,5469687,929887].map(n))}(a||(a={}));class f extends c{static get[Symbol.species](){return f}static from(t){return t instanceof c?i(t,this):"number"==typeof t?new this(t):void 0}copy(){return i(this,this.constructor[Symbol.species])}action(...t){return r(this,...t)}inverse(){const[t,e]=o.get(this),[s,i]=n(t,e);return s.forEach(((n,o)=>{t[n]=o,e[n]=(3-i[o])%3})),this}image(){const[t,e]=o.get(this),[s,i]=n(t,e);return[1,0,3,2,5,4,7,6].forEach(((n,o,r)=>{t[o]=r[s[n]],e[o]=(3-i[n])%3})),this}isReinstated(){return[0,16219978,2469029,33104619,17954269,49605440,51565086,34630144,3470675,84669705,36364435,50607086,18222084,52672894,36822425,51396687,70206073,38451740,40288914,53569564,84835823,73463517,71102743,86465138][super[0]]===super.position}*similar(t=NaN,e=0){const n=new Set;for(const[o,s]of[this,i(this).image(),i(this).inverse(),i(this).image().inverse()].entries())if(!n.has(s.position))for(const i of a.C){const r=i.action(s);for(const s of function*(){if(null===t||isNaN(t))for(const t of a.C)yield t;else yield a._C[e][r.find(t)]}()){const t=r.copy().action(s),e=t.position;n.has(e)||(n.add(e),yield{r:t,c:[i,s],image:!!(1&o),inverse:!!(2&o)})}}}*congruent(t=NaN,e=0){const n=new Set;for(const o of a.C){const s=o.action(this);for(const i of function*(){if(null===t||isNaN(t))for(const t of a.C)yield t;else yield a._C[e][s.find(t)]}()){const t=s.copy().action(i),e=t.position;n.has(e)||(n.add(e),yield{r:t,c:[o,i],image:!1,inverse:!1})}}}*similarNoCongruence(t=NaN,e=0){const n=new Set;for(const[o,s]of[,i(this).image(),i(this).inverse(),i(this).image().inverse()].entries())if(s&&!n.has(s.position))for(const i of a.C){const r=i.action(s);for(const s of function*(){if(null===t||isNaN(t))for(const t of a.C)yield t;else yield a._C[e][r.find(t)]}()){const t=r.copy().action(s),e=t.position;n.has(e)||(n.add(e),yield{r:t,c:[i,s],image:!!(1&o),inverse:!!(2&o)})}}}do(t){return t=t.replace(/\s/g,""),!!/^([RUFLDBXYZ](2|'|))*$/.test(t)&&r(this,...[...t.matchAll(/([RUFLDBXYZ])(2|'|)/g)].map((([,t,e])=>a[t][{"":0,2:1,"'":2}[e]])))}}var h;!function(t){const e=[...a.R,...a.U,...a.F],n=(t,n=1/0)=>async function*(){const o=new Set;let s=new Map([[new f(0),[]]]),i=new Map,r=0;for(;r-1<n&&s.size;){for(const[n,r]of s){const{position:s}=n;if(!o.has(s)){(()=>{for(const{r:{position:t}}of n.similarNoCongruence(0))if(o.has(t))return!1;return!0})()&&(yield{position:s,build:r});for(const{r:t}of n.congruent(0))o.add(t.position);t.filter((t=>!r.length||~~((r.at(-1)-t)/3))).forEach((t=>i.set(n.copy().action(e[t]),[...r,t]))),t.filter((t=>!r.length||~~((r.at(0)-t)/3))).forEach((t=>i.set(e[t].action(n),[t,...r])))}}s=i,i=new Map,r++}};t.halfOrQuarter=n([0,2,3,5,6,8,1,4,7],11),t.quarter=n([0,2,3,5,6,8],14)}(h||(h={}));var u=e.md,l=e.SV,p=e.F1;export{u as Rubik,l as Turn,p as solve};